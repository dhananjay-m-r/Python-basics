# -*- coding: utf-8 -*-
"""ln 5 Examples_Getting Started with Python.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/17LCKYj9qSICM34wbsqKptQfM_wj6wTZU
#About this notebook
Notebook made by: Dhananjay M.R
Subject: Computer Science - Grade 11 CBSE
Language: - Python
Topic: Getting Started with Python
Execution mode: Script Mode

Note: This is a compilation of the entire book. 
If you run this program directly, you may encouter with error.
Therefore it is recommended to cut the program (modify) and run it part by part

Refering the original file at Colaboratory is recommended

#Basics
Fundamentals to get started with Python
"""


# Program 5-1
# Write a program to show print statement in script mode

print("Save Earth")
print('Preserve Future')

# Program 5-2
# Write a program to display values of variables in Python

message = 'Keep Smiling'
print(message)
userNo = 101
print('User Number is', userNo)

# Program 5-3
# Write a python program to find the area of a rectangle given that its length is 10 units and breadths is 20 units

# To find the area of rectangle
length = 10
breadth = 20
area = length*breadth
print(area)

# Example 5.1 | 5.5 Using comments

# Variable amount is the total spending on grocery
amount = 3400

# Program 5-4
# Write a python program to find the sum of 2 numbers

# To find the sum of two numbers
num1 = 10
num2 = 20
result = num1 + num2
print(result)

"""# Data Types
Data type identifies the type of data values a variable can hold and the operations that can be performed on that data.
"""

# Example 5.3 | Data types

num1 = 10
print(type(num1))

num2 = -1210
print(type(num2))

var1 = True
print(type(var1))

float1 = -1921.9
print(type(float1))

var2 = -3+7.2j
print(type(var2))

"""# Sequence
A Python sequence is an ordered collection of items, where each item is indexed by an integer.
"""

# Example 5.4 | Lists

# To create a list
list1 = [5, 3.4, 'New Delhi', '20C', 45]

# To print the elements of the list in list1
print(list1)

# Example 5.5 | Tuple

# Creating a tuple
tuple1 = (10, 20, 'Apple', 3.4, 'a')
# To print the elements of the tuple: tuple1
print(tuple1)

# Example 5.6 | Set
# Create a set

set1 = {10,20,3.14,'New Delhi'}
print(type(set1))
print(set1)

# Duplicate elements are not included in the set
set2 = {1,2,1,3}
print(set2)

# Example 5.7 | None

myvar = None
print(type(myvar))
print(myvar)

# Example 5.8 | Dictionary
# Create a dictionary

dict1 = {'Fruit':'Apple', 'Climate': 'Cold', 'Price(kg)':120}

# To print specific details from the dictionary:
print(dict1['Fruit'])
print(dict1['Price(kg)'])
print(dict1['Climate'])

# To print everything on the dictionary
print(dict1)

"""# Arithmetic Operators
Arithmetic operators that are used to perform the four basic arithmetic operations as well as modular division, floor division and exponentiation.
"""

# Adittion  +

num1 = 5
num2 = 6
print(num1 + num2)

str1 = 'Hello'
str2 = 'India'
print(str1 + str2)

# Subtraction  -

num1 = 5
num2 = 6
num1 - num2

# Multiplication  *

num1 = 5
num2 = 6
print(num1 * num2)

str1 = 'India'
print(str1*2)

# Divison   /
num1 = 8
num2 = 4
num2/num1

# Modulas   %
num1 = 13
num2 = 5
num1%num2

# Floor Division  //
num1 = 13
num2 = 4
print(num1//num2)
print(num2//num1)

# Exponent   **
num1 = 3
num2 = 4
num1**num2

"""# Relational Operators
Relational operator compares the values of the operands on its either side and determines the relationship among them.
"""

# Relational Operators

# Some Global values for Relational Operators
num1 = 10
num2 = 0
num3 = 10
str1 = 'Good' 
str2 = 'Afternoon'

# Operator 1. == (Equals to)
print('***Results for Operator 1***')
print(num1 == num2)
print(str1 == str2)

print('')

# Operator 2. != (Not Equal to)
print('***Results for Operator 2***')
print(num1 != num2)
print(str1 != str2)
print(num1 != num3)

print('')

# Operator 3. > (Greater than)
print('***Results for Operator 3***')
print(num1 > num2)
print(str1 > str2)

print('')

# Operator 4. < (Less than)
print('***Results for Operator 4***')
print(num1 < num3)
print(str1 < str2)

print('')

# Operator 5. >= (Greater than or equal to)
print('***Results for Operator 5***')
print(num1 >= num2)
print(num2>= num3)
print(str1 >= str2)

print('')

# Operator 6. <= (Less than or equal to)
print('***Results for Operator 6***')
print(num1 <= num2)
print(num2 <= num3)
print(str1 <= str2)

"""# Assignment Operators
Assignment operator assigns or changes the value of the variable on its left.
"""

# Operator 1. = 

num1 = 2
num2 = num1

country = 'India'

print(num2)
print(country)

# Operator 2. +=

num1 = 10
num2 = 2
num1 += num2
print(num1)
print(num2)

str1 = 'Hello'
str2 = 'India'
str1 += str2
print(str1)

"""Above in the Operator 2: It adds the value of right-side operand to the left-side operand and assigns the result to the left-side operand 

Note: x += y is same as x = x + y
"""

# Operator 3.   -=

num1 = 10
num2 = 2
num1 -= num2
num1

"""Above in Operator 3: It subtracts the value of right-side operand from the left-side operand and assigns the result to left-side operand 

Note: x -= y is same as x = x - y
"""

# Operator 4.  *=

num1 = 2
num2 = 3
num1 *= num2
print(num1)

a = 'India'
a *= 3
print(a)

"""Above in Operator 4: It multiplies the value of right-side operand with the value of left-side operand and assigns the result to left-side operand 

Note: x *= y is same as x = x * y
"""

# Operator 5.   /=
num1 = 6
num2 = 3
num1 /= num2
num1

"""Above in Operator 5: It divides the value of left-side operand by the value of right-side operand and assigns the result to left-side operand 

Note: x /= y is same as x = x / y
"""

# Operator 6.   %=
num1 = 7
num2 = 3
num1 %= num2
num1

"""Above in Operator 6: It performs modulus operation using two operands and assigns the result to left-side operand 

Note: x %= y is same as x = x % y
"""

# Operator 7.   //=
num1 = 7
num2 = 3
num1 //= num2
num1

"""Above in Operator 7. It performs floor division using two operands and assigns the result to left-side operand 

Note: x //= y is same as x = x // y
"""

# Operator 8.   **=
num1 = 2
num2 = 3
num1 **= num2
num1

"""Above in Operator 8. It performs exponential (power) calculation on operators and assigns value to the left-side operand 

Note: x **= y is same as x = x ** y

# Logical Operators
"""

# Operator 1.   and

print(True and True)

num1 = 10
num2 = -20
print(bool(num1 and num2))

print(True and False)

num3 = 0
print(bool(num1 and num3))

print(False and False)

"""Above in Operator 1. If both the operands are True, then condition becomes True"""

# Operator 2.   or
print(True or True)
print(True or False)
print(False or False)
print(bool(num1 or num3))

"""Above in Operator 2. If any of the two operands are True, then the condition becomes True"""

#Operator 3.  not

num1 = 10
print(bool(num1))
not num1

"""Above in Operator 3. it is used to reverse the logical state of its operand

# Identity Operators
Identity operators are used to determine whether the value of a variable is of a certain type or not. Identity operators can also be used to determine whether two variables are referring to the same object or not. There are two identity operators.
"""

# Operator 1.   is
num1 = 5
print(type(num1) is int)

num2 = num1
print(id(num1))
print(id(num2))

print(num1 is num2)

"""Evaluates True if the variables on either side of the operator point towards the same memory location and False otherwise. var1 is var2 results to True if id(var1) is equal to id(var2)"""

# Operator 2.   is not
num1 is not num2

"""Evaluates to False if the variables on either side of the operator point to the same memory location and True otherwise. var1 is not var2 results to True if id(var1) is not equal to id(var2)

# Membership Operators
Membership operators are used to check if a value is a member of the given sequence or not.
"""

# Operator 1.   in
a = [1,2,3]
print(2 in a)
print('1' in a)

"""Returns True if the variable/value is found in the specified sequence and False otherwise"""

# Operator 2.   not in
a = [1,2,3]
print(10 not in a)
print(1 not in a)

"""# Precedence of Operators"""

# Example 5.9
# How will python evaluate the following expression?

20 + 30 * 40

# Soltuion: 
#      Step 1: 20 + (30 * 40)
#      Step 2: 20 + 1200

Example5_10 = 20 - 30 + 40
Example5_11 = (20 + 30) * 40
Example5_12 = 15.0 / 4 + (8.0 + 3.0)

print(Example5_10)
print(Example5_11)
print(Example5_12)

"""# Statement

In Python, a statement is a unit of code that the Python interpreter can execute.
"""

x = 4   #Assignment Statement
cube = x ** 3   #Assignment Statement
print(x, cube)  #Print Statement

"""# Input and Output"""

# Example 5.14

name = input("Enter your first name: ")
age = input("Enter your age: ")
type(age)

"""In the above program, the variable name will get the string ‘Arnab’, entered by the user. Similarly, the variable age will get the string ‘19’. We can typecast or change the datatype of the string data accepted from user to an appropriate numeric value. For example, the following statement will convert the accepted string to an integer. If the user enters any non-numeric value, an error will be generated."""

# Example 5.15
# Function int() to convert string to integer

age = int(input("Enter your age: "))
type(age)

"""In the above program, ***int()*** is added to convert string to integer

# Type Conversion
"""

# Program 5 - 5
# Program of explicit type conversion from int to float

num1 = 10
num2 = 20
num3 = num1 + num2
num4 = float(num1 + num2)

print(num3)
print('num3 belongs to', (type(num3)))

print('')

print(num4)
print('num4 belongs to', (type(num4)))

# Program 5 - 6
# Program of explicit type conversion from float to int

num1 = 10.2
num2 = 20.6
num3 = (num1 + num2)
num4 = int(num1 + num2)

print(num3)
print('num3 belongs to', (type(num3)))

print('')

print(num4)
print('num4 belongs to', (type(num4)))

# Program 5 - 7
# Example of type conversion between numbers and strings

priceIceCream = 25
priceBrownie = 45
totalPrice = priceIceCream + priceBrownie
print('The total is Rs. ' + str(totalPrice))



"""# Exam mark total score calculator
When the marks of each subject entered into the program, it will calculate your total marks out of 500 and give the overall percentage you have scored for the exam.

Program developer: Dhananjay M.R
"""

Math = float(input('Enter the marks scored in Math exam: '))
Physics = float(input('Enter the marks scored in Physics exam: '))
Chemistry = float(input('Enter the marks scored in Chemistry Exam: '))
English = float(input('Enter the marks scored in English exam: '))
ComputerScience = float(input('Enter the marks scored in Computer Science exam: '))

Total = Math + Physics + Chemistry + English + ComputerScience
Average = Total/5

print('')
print('Your total score out of 500 is: ', Total)
print('Your have scored', Average, '%' ' in this exam')

"""# Simple Interest Calculator

Based on the input value of Principal Amount, Rate of Interest and Time duration, this program calculator calculates the simple interest

Program Developed by: Dhananjay M.R
"""

Amount=int(input("Enter the amount: "))
Year=int(input("Enter the number of years: "))
Rate=float(input("Enter the rate of interest: "))

SimpleInterset=(Amount*Year*Rate)/100
    
print("The simple interset is: ",SimpleInterset)
